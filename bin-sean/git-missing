#!/bin/sh
NAME="git-jira"
VERSION=0.0.1
DESCRIPTION='Show git tags containing commits for the specified JIRA'
LICENSE='Report bugs, feature requests to Sean Dunlap'
USAGE='git jira SWCM-12345'

# Exit immediately upon failure, and command printing for reference
set -e

# uncomment to enable script debugging
#set -x

# Self-identify, ignoring a useless $0 in git alias invocations
case "$1" in --version|version) echo $VERSION >&2 ; exit 64 ;; esac
CMD="$0"
if { printf %s "$CMD" | grep [[:space:]] && ! command -v "$CMD"; } >/dev/null 2>&1 ; then CMD=; fi

# usage [<error message> [<exit code>]]
usage () {
        # TTY output gets a bolded name and underlined URL
        if [ -t 2 ]; then
                ansify='{ sub(/[^/]+$/, "\x1b[1m&\x1b[22m"); if(/[/]/) $0="\x1b[4m" $0 "\x1b[0m"; print }'
                NAME="`echo $NAME | awk "$ansify"`"
        fi

        message="$1"
        if [ "z$1" = z ]; then message="`printf '%s %s\n%s' "$NAME" "$VERSION" "$DESCRIPTION"`"; fi
        printf '%s\n\nUsage: %s %s\n\n%s\n' "$message" "$CMD" "$USAGE" "$LICENSE" | sed 's/\\//g' >&2

        if [ "z$2" != z ]; then exit $2; fi
        exit 64
}

main () {

      echo "\nComplete set of commits for $1 found all branches:\n"
      git log --all --oneline --grep=$1 | grep -v Auto-library
      echo "\nBranches containing these commits $1:\n"
      git log --all --pretty=format:%H --grep=$1 | xargs -I {} git branch -a --contains {} | sort | uniq

      # WIP
      #echo "\nBranches NOT containing these commits $1:\n"
      #git log --all --pretty=format:%H --grep=$1 | xargs -I {} git branch -a --contains {} | xargs -I {} git branch -a {}

      echo "\nRelease tags that contain commits for $1:\n"
      git log --all --pretty=format:%H --grep=$1 | xargs -I {} git tag --contains {} | grep -v NB_ | grep -v origin/ | sort | uniq
}

# Normal mode relies on script arguments
if [ "z$CMD" != z ]; then main "$@"; exit; fi

# git alias mode uses the appended arguments
main
